@page "/ticket/{TicketId:int}"
@inject NavigationManager Navigation 

<h3>Szczegóły zgłoszenia</h3>

@if (ticket == null)
{
	<p>Ładowanie zgłoszenia...</p>
}
else
{
	<div class="ticket-details">
		<p><strong>Imię klienta:</strong> @ticket.ClientName</p>
		<p><strong>Nazwa urządzenia:</strong> @ticket.Device</p>
		<p><strong>Opis zgłoszenia:</strong> @ticket.Description</p>
		<p><strong>Data dodania:</strong> @ticket.CreatedAt.ToString("yyyy-MM-dd HH:mm")</p>
		<p><strong>Status:</strong> @ticket.Status</p>

		<h4><strong>Załączniki:</strong></h4>
		<!-- Wyświetlanie załączników zgłoszenia serwisowego -->
		@if(ticket.Attachments != null && ticket.Attachments.Any())
		{
			<ul>
				@foreach (var attachment in ticket.Attachments)
				{
					<li>
						@attachment.FileName
						<button class="btn btn-link" @onclick="() => DownloadAttachment(attachment)">
							Pobierz
						</button>
					</li>
				}
			</ul>
		}
		else
		{
			<p>Brak załączników.</p>
		}
	

		<button class="btn btn-secondary" @onclick="GoBack">Wróć do listy zgłoszeń</button>
	</div>
}
@code {

	[Parameter] public int TicketId { get; set; } // Id zgłoszenia przekazywane z URL
	private Ticket? ticket; // Zgłoszenie serwisowe


	protected override void OnInitialized() // Metoda wywoływana podczas inicjalizacji
	{
		ticket = TicketService.GetTicketById(TicketId); // Pobieramy zgłoszenie serwisowe na podstawie Id
	}

	async Task DownloadAttachment(Attachment attachment) // Metoda do pobierania załącznika
	{
		try
		{
			using var stream = new MemoryStream(attachment.Data); // Tworzenie strumienia z danych załącznika
			var result = await FileSaver.SaveAsync(attachment.FileName, stream); // Wywołanie metody do zapisu pliku

			if(result.IsSuccessful) // Sprawdzenie, czy zapis pliku powiódł się
			{
				await Application.Current.MainPage.DisplayAlert("Sukces", "Plik został pobrany pomyślnie.", "OK");
			}
			else // Obsługa błędu zapisu pliku
			{
				await Application.Current.MainPage.DisplayAlert("Błąd", "Nie udało się pobrać pliku.", "OK");
			}

		}
		catch (Exception ex) // Obsługa błędu
		{
			await Application.Current.MainPage.DisplayAlert("Błąd", $"Nie udało się pobrać pliku: {ex.Message}", "OK");

		}
	}

	void GoBack() // Metoda do powrotu do listy zgłoszeń
	{
		Navigation.NavigateTo("/tickets"); // Przekierowanie do strony z listą zgłoszeń
	}

	// Metoda do pobierania załącznika

}
